{"version":3,"sources":["assets/images/HashChat_01.png","components/Header.jsx","components/Copyright.jsx","components/ChatScreen.jsx","assets/images/Photo03.png","components/LoginScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","class","style","background","className","width","src","header01","alt","Button","startIcon","onClick","onLogOut","variant","color","Copyright","Typography","fontSize","fontStyle","align","Date","getFullYear","ChatScreen","useEffect","localStorage","getItem","useState","inputTxt","setInputTxt","useRealtime","result","useInsert","insertMessage","data","fetching","error","message","bgcolor","textAlign","Box","fontFamily","fontWeight","xs","sm","md","p","borderBottom","userName","onSubmit","e","a","preventDefault","alert","username","text","console","log","type","value","placeholder","onChange","target","textTransform","marginLeft","map","id","borderTop","useStyles","makeStyles","theme","root","height","image","backgroundImage","photo01","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","marginTop","submit","LoginScreen","classes","Grid","container","component","CssBaseline","item","Paper","elevation","square","logo","noValidate","TextField","InputProps","fullWidth","label","name","autoComplete","autoFocus","onLogIn","setItem","mt","client","createClient","process","App","setUserName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd10d768.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/HashChat_01.4593e6ee.png\";","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport header01 from '../assets/images/HashChat_01.png'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n\nfunction Header(props) {\n    return (\n<>\n<div class=\"wrapper\" style={{background: '#f2f2f2'}}>\n        <section className=\"content\">\n            <div className=\"columns\">\n                <main className=\"main\"></main>\n                <aside className=\"sidebar-first\"><img style={{ width: '200px'}} src={header01} alt=\"HashChat Logo\" /></aside>\n                <aside className=\"sidebar-second\">\n                    <Button \n                    startIcon={<ExitToAppIcon />}\n                    onClick={props.onLogOut}\n                    variant=\"contained\"\n                    style={{color: 'white', background: '#f2844d'}}\n                    >logout\n                    </Button>\n                </aside>\n            </div>\n        </section>\n    </div>\n</>\n    )\n}\n\nexport default Header\n","import Typography from '@material-ui/core/Typography';\n\nfunction Copyright() {\n    return (\n      <Typography style={{fontSize: '12px', fontStyle: 'italic', color: '#aaa'}} variant=\"body2\" align=\"center\">\n        {'Copyright Â© '}\n        {new Date().getFullYear()}\n          &nbsp;HashChat\n        {' '}\n      </Typography>\n    );\n  }\n\n  export default Copyright","import React, { useState, useEffect } from 'react'\nimport { useRealtime, useInsert } from 'react-supabase'\nimport { Box, Button } from '@material-ui/core'\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined'\nimport Header from './Header'\nimport Copyright from './Copyright'\n\nfunction ChatScreen(props) {\n    \n    useEffect(() => {\n        const userName = localStorage.getItem('userName')\n        // console.log(userName)\n    })\n\n    const [inputTxt, setInputTxt] = useState('')\n    const [result, reexecute] = useRealtime('messages')\n    const [insertResponse, insertMessage] = useInsert('messages')\n    const { data, fetching, error } = result\n\n    if (fetching || !data) return <p>Loading...</p>\n    if (error) return <p>Oh no... {error.message}</p>\n        // console.log(data)\n    return (\n\n<>\n        <Header \n        onLogOut={props.onLogOut}\n        bgcolor=\"background.paper\" \n        />\n        \n        <div style={{textAlign: 'center'}}>\n                <Box\n                color=\"#000\"\n                bgcolor=\"background.paper\"\n                fontFamily=\"h1.fontFamily\"\n                fontWeight=\"bold\"\n                fontSize={{ xs: '1.2rem', sm: '1.8rem', md: '1.8rem' }}\n                p={{ xs: 2, sm: 3, md: 4 }}\n                >\n                        Hello, <span style={{color:'#ff671d', borderBottom: '#ff671d dotted 1px'}}>{props.userName}!</span> Welcome to HashChat<br/>\n                        {/* <button onClick={props.onLogOut}>logout</button> */}\n                </Box>\n\n                <Box bgcolor=\"background.paper\">\n                    <form onSubmit={async (e) => {\n                    e.preventDefault()\n                    if (inputTxt === '') {\n                        alert('Your HashChat message can\\'t be empty!')\n                        return\n                    }\n\n                    // props.onLogIn(inputTxt)\n                    // console.log(inputTxt)\n                    const {error} = await insertMessage({ username: props.userName, text: inputTxt })\n                    setInputTxt('') \n                    if (error) {\n                        console.log(error)\n                    }\n                }}>\n                    <input type=\"text\" className=\"chat-message\" value={inputTxt} placeholder=\"\" onChange={(e) => {\n                        setInputTxt(e.target.value)\n                    }} />\n                    {/* <input type=\"submit\" value=\"Send\" /> */}\n                    <Button \n                    startIcon={<SendOutlinedIcon />}\n                    type=\"submit\"\n                    value=\"Send\"\n                    variant=\"contained\" \n                    color=\"white\"\n                    style={{background: '#f2844d', color: 'white', textTransform: 'none', marginLeft: '6px'}}\n                    >\n                    Send your HashChat \n                    </Button>\n\n                    </form>\n                </Box>\n                <Box className=\"outer-chat\">\n                <div className=\"chats\">\n                <ul>\n                {/* // li the message and username */}\n                \n                    {data.map((message) =>{\n                        return <li key={message.id}><span className=\"chat-render\">{message.username} : {message.text}</span></li>\n                    })}\n                </ul>\n                </div>\n                </Box>\n                    <Box style={{borderTop: '10px'}}>\n                    {/* <hr style={{color: 'lightgray'}} /> */}\n                        <Copyright />\n                </Box>\n        </div>\n</>\n\n    )\n}\n\nexport default ChatScreen\n\n","export default __webpack_public_path__ + \"static/media/Photo03.40a58458.png\";","import React, {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport photo01 from '../assets/images/Photo03.png'\nimport logo from '../assets/images/HashChat_01.png'\nimport Copyright from './Copyright'\n\n\nconst textComp = () => {\n  return (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      HashChat\n    </Link>{' '}\n  </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${photo01})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n///////////////////////\n\nfunction LoginScreen(props) {\n\n  const classes = useStyles();\n\n  const [inputTxt, setInputTxt] = useState('')\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            <img src={logo} style={{ width: '333px'}} />\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n                InputProps={{value: inputTxt, onChange: (e) => {\n                    setInputTxt(e.target.value)\n                }}}\n              variant=\"outlined\"\n              margin=\"normal\"\n              // required\n              fullWidth\n              id=\"email\"\n              label=\"Enter your HashChat Username\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            //   style={{border: 'black'}}\n            />\n\n            <Button\n            onClick={() =>{\n                console.log(inputTxt)\n                if (inputTxt === '') {\n              alert('Username cant be empty')\n              return\n          }\n          props.onLogIn(inputTxt)\n\n          localStorage.setItem('userName', inputTxt)\n\n            }}\n            // this fixes bug where page refreshes instead of sending form data\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              style={{textTransform: 'none', background: '#ff671d'}}\n            >\n              Enter HashChat\n            </Button>\n            <Box mt={1}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default LoginScreen","import { createClient } from '@supabase/supabase-js'\nimport { Provider } from 'react-supabase'\nimport React, { useState } from 'react'\nimport ChatScreen from './components/ChatScreen'\nimport LoginScreen from './components/LoginScreen'\nimport './assets/styles/site.css'\n\nconst client = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY)\n\nfunction App(props) {\n\n  const [userName, setUserName] = useState(null)\n  // Set user \n  localStorage.setItem('userName', userName)\n\n  const savedUser = localStorage.getItem('userName')\n\n  return (\n    \n    <div style={{background: 'white'}}>\n      <Provider value={client}>\n      { userName ? (<ChatScreen userName={userName} onLogOut={() => setUserName(null)} />) : (<LoginScreen onLogIn={setUserName} />) }\n      </Provider>\n    </div>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}